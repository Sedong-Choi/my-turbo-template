import { type Metadata } from "next";
import { Provider } from "@repo/ui/Provider";
import Navbar from "@repo/ui/CustomNavbar";
import "./globals.css";
import { SessionProvider, signOut } from "next-auth/react";
// TODO remove this after auth logic is implemented
import {
  navItems as mocNavItems,
  profileMenuItems as mockProfileMenuItems,
  userInfo as mockUserInfo,
} from "@repo/ui/mock";
import type { UserInfo } from "@repo/ui/types";
import { auth } from "@/auth";
import { getMenuItems, getNavItems } from "@/prisma/actions";
import Footer from "@/components/footer";
import Background from "@/components/background/background";
import { convertUnitsToPx } from "@repo/ui/Utils";

export const metadata: Metadata = {
  title: `${process.env.APP_NAME} - home`,
  description: "Generated by create turbo",
  generator:
    "nextjs, react, server components, turbo, vercel, prisma, tailwindcss, typescript, next-auth",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  // nextauth session
  const session = await auth();

  const userInfo: UserInfo = mockUserInfo;
  if (session?.user) {
    userInfo.email = session.user.email ?? "";
    userInfo.name = session.user.name ?? "";
    userInfo.image = session.user.image ?? "";
  } else {
    userInfo.email = "";
    userInfo.name = "";
  }
  const navItems = (await getNavItems()) || mocNavItems;
  const profileMenuItems = (await getMenuItems()) || mockProfileMenuItems;

  const navHeight: string = convertUnitsToPx("3rem");
  return (
    <html suppressHydrationWarning>
      <body className="min-h-screen text-foreground bg-background">
        <SessionProvider session={session}>
          <Provider>
            <div id="app-container">
              <Navbar
                navItems={navItems}
                menuItems={profileMenuItems}
                userInfo={userInfo}
                signOut={signOut}
                isLoggedIn={userInfo.email || userInfo.name ? true : false}
                height={navHeight}
              />
              <Background remainingHeight={navHeight} />
              <main className={`flex flex-col justify-center items-center w-full mx-auto max-w-7xl px-6`}
                style={{ minHeight: `calc(100vh - ${navHeight})` }}>
                {children}
              </main>
              <Footer />
            </div>
          </Provider>
        </SessionProvider>
      </body>
    </html >
  );
}
